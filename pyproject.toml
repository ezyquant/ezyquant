[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ezyquant"
dynamic = ["version"]
description = "Powerful Python backtesting for Thai stocks"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = []
authors = [
  { name = "Fintech (Thailand) Company Limited", email = "admin@fintech.co.th" },
]
classifiers = [
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Intended Audience :: Financial and Insurance Industry",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Topic :: Office/Business :: Financial",
  "Topic :: Office/Business :: Financial :: Investment",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Information Analysis",
]
dependencies = [
  "pandas>=1.5",
  "sqlalchemy>=2.0",
  "psycopg2-binary>=2.9",
  "ta>=0.10",
  "XlsxWriter>=3.0",
  "typing_extensions>=4.4",
  "quantstats>=0.0",
  "ipython", # For quantstats
  "python-dotenv>=1.0",
]

[project.urls]
Documentation = "https://pydoc.ezyquant.com/"
Issues = "https://github.com/ezyquant/ezyquant/issues"
Source = "https://github.com/ezyquant/ezyquant"

[tool.hatch.version]
path = "ezyquant/_version.py"

[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]~=7.2",
  "pytest~=7.0",
  "pytest-kwparametrize~=0.0",
  "pytest-xdist[psutil]~=3.0",
  "pytest-env~=0.8",
]
[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = ["- coverage combine", "coverage report"]
cov = ["test-cov", "cov-report"]

[[tool.hatch.envs.all.matrix]]
python = ["3.8", "3.9", "3.10", "3.11"]

[tool.hatch.envs.lint]
detached = true
dependencies = ["black>=23.1.0", "mypy>=1.0.0", "ruff>=0.0.243"]
[tool.hatch.envs.lint.scripts]
typing = "mypy --install-types --non-interactive {args:ezyquant tests}"
style = ["ruff {args:.}", "black --check --diff {args:.}"]
fmt = ["black {args:.}", "ruff --fix {args:.}", "style"]
all = ["style", "typing"]

[tool.black]
target-version = ["py38"]
line-length = 88

[tool.docformatter]
black = true
exclude = [".venv"]

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
  "A",
  "ARG",
  "B",
  "C",
  "E",
  "EM",
  "F",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Ignore checks for possible passwords
  "S105",
  "S106",
  "S107",
  # Ignore complexity
  "C901",
  "PLR0911",
  "PLR0912",
  "PLR0913",
  "PLR0915",
  # Ignore line length, let black, docformatter handle it
  "E501",
  # Ignore cache usage
  "B019",
  # Ignore None and Boolen comparisons from sqlalchemy and pandas
  "E711",
  "E712",
  # Ignore other
  "E741",
  "N802",
]

[tool.ruff.isort]
known-first-party = ["ezyquant"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
# Don't touch unused imports
"**/__init__.py" = ["F401"]
# Tests can use magic values, assertions, and other things
"tests/**/*" = ["PLR2004", "S101", "T", "ARG", "B006", "B008"]
"examples/**/*" = ["T", "PLR2004"]

[tool.coverage.run]
source_pkgs = ["ezyquant", "tests"]
branch = true
parallel = true
omit = ["ezyquant/_version.py"]

[tool.coverage.paths]
ezyquant = ["ezyquant"]
tests = ["tests"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.pytest.ini_options]
addopts = "-n auto"
env = [
  "EZYQUANT_DATABASE_URI=sqlite:///ezyquant.db",
  # -------- OR --------
  # "EZYQUANT_DATABASE_DRIVER=postgresql",
  # "EZYQUANT_DATABASE_USERNAME=postgres",
  # "EZYQUANT_DATABASE_PASSWORD=postgres",
  # "EZYQUANT_DATABASE_HOST=localhost",
  # "EZYQUANT_DATABASE_PORT=5432",
  # "EZYQUANT_DATABASE_NAME=psims",
]
testpaths = ["tests"]
